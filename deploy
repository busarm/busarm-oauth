<?php

// Regions
const REGION_DEV = "eu-west-2";
const REGION_PROD = "eu-west-2";
// Stages
const STAGE_DEV = "Dev";
const STAGE_PROD = "Prod";
// Allowed Branches
const BRANCHES_PROD = [
    'master',
    'main',
    'production',
    'release-*',
];
const BRANCHES_DEV = [
    'staging',
    'develop',
    'development',
    '*-develop',
    '*-dev',
];

// Get Arguments
$args = parseArgs($argv);

// Get current branch name
$branch = branchName();

echo PHP_EOL;
echo "---------------------------------";
echo PHP_EOL;
echo "Wecari PHP Serverless Deployment";
echo PHP_EOL;
echo "Branch - $branch";
echo PHP_EOL;
echo "---------------------------------";
echo PHP_EOL;

// Help
if (isset($args['--help'])) {
    showHints();
    exit(0);
} else {

    // Check commit status
    if (!checkCommit()) {
        exit("Please commit files to git before deploying") . PHP_EOL;
    }

    // If --all requested, ensure that branch is production
    if (isset($args['--all']) && (isBranchMatch($branch, BRANCHES_PROD))) {
        deploy(STAGE_DEV, REGION_DEV, $args);
        deploy(STAGE_PROD, REGION_PROD, $args);
    }
    // If --all requested, ensure branch is production
    else if (isset($args['--prod']) && (isBranchMatch($branch, BRANCHES_PROD))) {
        deploy(STAGE_PROD, REGION_PROD, $args);
    }
    // If --all requested, ensure branch is staging or development
    else if (isset($args['--dev']) && (isBranchMatch($branch, BRANCHES_DEV))) {
        deploy(STAGE_DEV, REGION_DEV, $args);
    } else {
        showHints();
    }
    exit(0);
}

/**
 * Process serverless deployment
 *
 * @param string $stage
 * @param string $region
 * @param array $params
 * @return void
 */
function deploy($stage = STAGE_DEV, $region = REGION_DEV, $params = [])
{
    $args = [];
    $function = $params['--function'] ?? $params['-f'] ?? '';
    if (isset($params['--conceal'])) {
        $args[] = '--conceal';
    }
    if (isset($params['--force'])) {
        $args[] = '--force';
    }
    if (isset($params['--verbose']) || isset($params['-v'])) {
        $args[] = '--verbose';
    }
    passthru("git push && sls deploy --stage=$stage --region=$region" . implode(' ', $args) . ' ' . $function);
}

/**
 * Parse Command Args
 * 
 * @param array $args
 * @return array
 */
function parseArgs($args)
{
    $params = [];
    if (!empty($args)) {
        unset($args[0]);
        foreach ($args as $arg) {
            $e = explode("=", $arg);
            if (count($e) == 2)
                $params[$e[0]] = $e[1];
            else
                $params[$e[0]] = 1;
        }
    }
    return $params;
}

/**
 * Show Hints
 *
 * @return void
 */
function showHints()
{

    echo "php deploy [options]";
    echo PHP_EOL;
    echo PHP_EOL;
    echo "Options";
    echo PHP_EOL;
    echo "-------";
    echo PHP_EOL;
    echo "--dev             =     Deployment to Development ENV. Permitted branches: " . implode(' ', BRANCHES_DEV);
    echo PHP_EOL;
    echo "--prod            =     Deployment to Production ENV. Permitted branches: " . implode(' ', BRANCHES_PROD);
    echo PHP_EOL;
    echo "--all             =     Deployment to All ENV - Development and Production. Permitted branches: " . implode(' ', BRANCHES_PROD);
    echo PHP_EOL;
    echo "--conceal         =     Hide secrets from the output (e.g. API Gateway key values)";
    echo PHP_EOL;
    echo "--verbose         =     Show all stack events during deployment";
    echo PHP_EOL;
    echo "--function=<VAL>  =     Function name. Deploys a single function";
    echo PHP_EOL;
    echo PHP_EOL;
}

/**
 * Check if files have been committed to git
 *
 * @return boolean
 */
function checkCommit()
{
    return empty(trim(shell_exec('git diff --quiet || echo dirty')));
}

/**
 * Get branch name
 *
 * @return string
 */
function branchName()
{
    return trim(shell_exec('git rev-parse --abbrev-ref HEAD'));
}

/**
 * Check if branch matches
 *
 * @param string $name Branch name
 * @param array $list Branch list to match against
 * @return boolean
 */
function isBranchMatch($name, $list)
{
    foreach ($list as $branch) {
        if (!empty($branch) && stripos($branch, '*') !== false && stripos($name, str_replace('*', '', $branch)) !== false) {
            return true;
        } else if (!empty($branch) && $branch == $name) {
            return true;
        }
    }
    return false;
}
